<h1>USERS</h1>
<h2>Panel de administración de usuarios.</h2>
<p>Visualizar usuarios, modificar roles y eliminar usuarios.</p><br>

<div id="usersList">
    {{#each users}}
    <div class="user">
        <h3><strong>{{this.first_name}} {{this.last_name}}</strong></h3>
        <ul>
            <li>User ID (db): {{this._id}}</li>
            <li>Email: {{this.email}}</li>
            <li>Role: {{this.role}}</li>
            <li>Documentation Status: {{this.status}}</li>
        </ul>
        {{#notEquals this.role "admin"}}
        <div id="actions">
            <button class="action1" onclick="modifyUserRole('{{this._id}}', '{{this.role}}',  '{{this.status}}')">Modificar Rol</button>
            <button class="action2" onclick="deleteUser('{{this._id}}')">Eliminar Usuario</button>
        </div><br>
        {{else}}
            <p><b>Nota: </b>No puedes modificar rol ni eliminar un Admin desde el frontend.</p><br>
        {{/notEquals}}
    </div>
    {{/each}}
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    async function modifyUserRole(userID, userRole, userStatus) {
        try {
            const duration = 1500;
            const response = await fetch(`/api/users/premium/${userID}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
            });
            if ((response.ok && userRole == "premium") || (response.ok && userRole == "user" && userStatus == "completo")) {
                // Notificar exito.
                Swal.fire({
                    title: `Se ha modificado el rol del usuario.`,
                    toast: true,
                    position: "top-end",
                    timer: duration,
                    timerProgressBar: true
                });
                // Recargar página.
                setTimeout(() => {
                    location.reload();
                }, duration);
            } else {
                // Notificar fallo.
                Swal.fire({
                    title: `No es posible modificar el rol del usuario.`,
                    toast: true,
                    position: "top-end",
                    timer: duration,
                    timerProgressBar: true
                });
            }
        } catch (error) {
            console.error('Error en la solicitud PUT:', error);
        }
    }

    async function deleteUser(userID) {
        try {
            const duration = 1500;
            const response = await fetch(`/api/users/${userID}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            });
            if (response.ok) {
                // Notificar exito.
                Swal.fire({
                    title: `Se ha eliminado el usuario.`,
                    toast: true,
                    position: "top-end",
                    timer: duration,
                    timerProgressBar: true
                });
                // Recargar página.
                setTimeout(() => {
                    location.reload();
                }, duration);
            } else {
                // Notificar fallo.
                Swal.fire({
                    title: `No es posible eliminar el usuario.`,
                    toast: true,
                    position: "top-end",
                    timer: duration,
                    timerProgressBar: true
                });
            }
        } catch (error) {
            console.error('Error en la solicitud DELETE:', error);
        }
    }
</script>